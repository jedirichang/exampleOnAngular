import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-multiple-file-upload-component',
  templateUrl: './multiple-file-upload-component.component.html',
  styleUrls: ['./multiple-file-upload-component.component.less']
})
export class MultipleFileUploadComponentComponent implements OnInit {

  urls: Array<string> = [];
  files: Array<object> = [];
  imagesSubmited=false;
  constructor() { }
  ngOnInit() {

  }

  //Method triggers click method on the hidden upload input element. 
  //Which in turn help us in uploading the image
  openUploadFile(event) {

    //If this method is called, the default action of the event will not be triggered.
    event.preventDefault();

    //Hold the reference to the element we want to trigger the click on.
    let element: HTMLElement = document.getElementById('uploadFileInput') as HTMLElement;

    //Trigger click event on the selected element.
    element.click();

  }

  //Triggers on change event, embedded in the file input with id uploadFileInput;

  onUpload(event) {
    //Check to see if the  event have files in it.
    if (event.target.files && event.target.files[0]) {
      let file = event.target.files[0];

      //Read about FileReader here https://developer.mozilla.org/en-US/docs/Web/API/FileReader
      //Briefly, it lets you asynchronously read  the content of file(s) using file object provided.
      let reader = new FileReader();

      //This event is triggered each time the reading(initialized below the  method) operation is successfully completed.
      reader.onload = (e: any) => {
        //Push read urls generated by the reader method. A loop through this array will render images in html with src as the url provided as string in the array.
        this.urls.push(e.target.result);
      }

      //Starts reading the content of the flie/Blob once finished, return callback with result key in event object containing data url(s);
      reader.readAsDataURL(file);

      //Push the file object inside an array to be used later for collection at the time of submit
      this.files.push(event.target.files[0]);
    }
  }

  //Method Removes the image from the uploaded images list.
  removeImage(index) {
    //Remove the url at the index index in the urls array.
    this.urls.splice(index, 1);
    //Remove the file object at the index in the files array.
    this.files.splice(index, 1)
  }
}
